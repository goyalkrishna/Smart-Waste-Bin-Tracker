<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Live Bin Map</title>
    <!-- Leaflet CSS -->
    <link
      rel="stylesheet"
      href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    />
    <!-- Local CSS -->
    <link rel="stylesheet" href="/css/map.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
    />
  </head>
  <body>
    <div id="map"></div>
    <a href="/profile" class="back-btn"
      ><i class="fas fa-arrow-left"></i> Back to Dashboard</a
    >

    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script>
      // --- Initialize Map ---
      // Centered on NIT Trichy
      const map = L.map("map").setView([10.7615, 78.8155], 16);

      // Add OpenStreetMap tiles
      L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        attribution:
          '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
      }).addTo(map);

      const markers = {};

      // --- Function to create custom colored icons ---
      function createIcon(color) {
        return L.divIcon({
          className: "custom-div-icon",
          html: `<div style='background-color:${color};' class='marker-pin'></div><i class='fas fa-trash-alt'></i>`,
          iconSize: [30, 42],
          iconAnchor: [15, 42],
        });
      }

      const greenIcon = createIcon("#22c55e");
      const yellowIcon = createIcon("#f59e0b");
      const redIcon = createIcon("#ef4444");

      // --- Function to fetch and update bin markers ---
      async function updateBinMarkers() {
        try {
          const response = await fetch("http://localhost:3000/api/bins");
          const bins = await response.json();

          bins.forEach((bin) => {
            let icon;
            if (bin.fillLevel >= 80) icon = redIcon;
            else if (bin.fillLevel >= 30) icon = yellowIcon;
            else icon = greenIcon;

            const popupContent = `<h4>${bin.binId}</h4><p>${bin.location}</p><p><b>Fill Level: ${bin.fillLevel}%</b></p>`;

            if (markers[bin.binId]) {
              // If marker exists, update its icon and popup
              markers[bin.binId].setIcon(icon).setPopupContent(popupContent);
            } else {
              // If marker doesn't exist, create it
              const newMarker = L.marker([bin.latitude, bin.longitude], {
                icon: icon,
              })
                .addTo(map)
                .bindPopup(popupContent);
              markers[bin.binId] = newMarker;
            }
          });
        } catch (error) {
          console.error("Failed to update bin markers:", error);
        }
      }

      // Initial fetch and then update every 4 seconds
      updateBinMarkers();
      setInterval(updateBinMarkers, 4000);
    </script>
    <style>
      /* Styles for the custom marker icon */
      .custom-div-icon {
        position: relative;
        text-align: center;
      }
      .marker-pin {
        width: 30px;
        height: 30px;
        border-radius: 50% 50% 50% 0;
        transform: rotate(-45deg);
        border: 2px solid #fff;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
      }
      .custom-div-icon i {
        position: absolute;
        top: 7px;
        left: 0;
        width: 100%;
        font-size: 14px;
        color: #fff;
      }
    </style>
  </body>
</html>
